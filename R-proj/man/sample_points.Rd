% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{sample_points}
\alias{sample_points}
\title{Sample points from a convex Polytope (H-polytope, V-polytope or a zonotope) or use direct methods for uniform sampling from the unit or the canonical or an arbitrary \eqn{d}-dimensional simplex and the boundary or the interior of a \eqn{d}-dimensional hypersphere}
\usage{
sample_points(P = NULL, n = NULL, random_walk = NULL,
  distribution = NULL, known_body = NULL)
}
\arguments{
\item{P}{A convex polytope. It is an object from class (a) Hpolytope or (b) Vpolytope or (c) Zonotope or (d) an intersection of two V-polytopes.}

\item{n}{The number of points that the function is going to sample from the convex polytope.}

\item{random_walk}{Optional. A list that declares the random walk and some related parameters as follows:
\itemize{
\item{\code{walk} }{ A string to declare the random walk: i) \code{'CDHR'} for Coordinate Directions Hit-and-Run, ii) \code{'RDHR'} for Random Directions Hit-and-Run, iii) \code{'BaW'} for Ball Walk, iv) \code{'BiW'} for Billiard walk, v) \code{'BCDHR'} boundary sampling by keeping the extreme points of CDHR or vi) \code{'BRDHR'} boundary sampling by keeping the extreme points of RDHR. The default walk is \code{'BiW'} for the uniform distribution or \code{'CDHR'} for the Gaussian distribution.}
\item{\code{walk_length} }{ The number of the steps for the random walk. The default value is \eqn{5} for \code{'BiW'} and \eqn{\lfloor 10 + d/10\rfloor} otherwise.}
\item{\code{BaW_rad} }{ The radius for the ball walk.}
\item{\code{L} }{The maximum length of the billiard trajectory.}
}}

\item{distribution}{Optional. A list that declares the target density and some related parameters as follows:
\itemize{
\item{\code{density}}{A string: (a) \code{'uniform'} for the uniform distribution or b) \code{'gaussian'} for the multidimensional spherical distribution. The default target distribution is uniform.}
\item{\code{variance} }{ The variance of the multidimensional spherical gaussian. The default value is 1.}
\item{\code{InnerPoint} }{ A \eqn{d}-dimensional numerical vector that defines a starting point in the interior of the polytope for the random walk and the mode of the Gaussian distribution. The default choice is the center of the Chebychev ball.}
}}

\item{known_body}{A list to request exact uniform sampling from special well known convex bodies through the following input parameters:
\itemize{
\item{\code{body} }{ A string that declares the type of the body for the exact sampling: a) \code{'unit simplex'} for the unit simplex, b) \code{'canonical simplex'} for the canonical simplex, c) \code{'hypersphere'} for the boundary of a hypersphere centered at the origin, d) \code{'ball'} for the interior of a hypersphere centered at the origin.}
\item{\code{dimension} }{ An integer that declares the dimension when exact sampling is enabled for a simplex or a hypersphere.}
\item{\code{radius} }{ The radius of the \eqn{d}-dimensional hypersphere. The default value is \eqn{1}.}
}}
}
\value{
A \eqn{d\times n} matrix that contains, column-wise, the sampled points from the convex polytope P.
}
\description{
Sample n points with uniform or multidimensional spherical gaussian -centered in an internal point- target distribution.
The \eqn{d}-dimensional unit simplex is the set of points \eqn{\vec{x}\in \R^d}, s.t.: \eqn{\sum_i x_i\leq 1}, \eqn{x_i\geq 0}. The \eqn{d}-dimensional canonical simplex is the set of points \eqn{\vec{x}\in \R^d}, s.t.: \eqn{\sum_i x_i = 1}, \eqn{x_i\geq 0}.
}
\examples{
# uniform distribution from the 3d unit cube in V-representation using ball walk
P = gen_cube(3, 'V')
points = sample_points(P, n = 100, random_walk = list("walk" = "BaW", "walk_length" = 5))

# gaussian distribution from the 2d unit simplex in H-representation with variance = 2
A = matrix(c(-1,0,0,-1,1,1), ncol=2, nrow=3, byrow=TRUE)
b = c(0,0,1)
P = Hpolytope$new(A,b)
points = sample_points(P, n = 100, distribution = list("density" = "gaussian", "variance" = 2))

# uniform points from the boundary of a 2-dimensional random H-polytope
P = gen_rand_hpoly(2,20)
points = sample_points(P, n = 5000, random_walk = list("walk" = "BRDHR"))

# 100 uniform points from the 2-d unit ball
points = sample_points(n = 100, known_body = list("body" = "ball", "dimension" = 2))
}
\references{
\cite{R.Y. Rubinstein and B. Melamed,
\dQuote{Modern simulation and modeling} \emph{ Wiley Series in Probability and Statistics,} 1998.}

\cite{A Smith, Noah and W Tromble, Roy,
\dQuote{Sampling Uniformly from the Unit Simplex,} \emph{ Center for Language and Speech Processing Johns Hopkins University,} 2004.}

\cite{Art B. Owen,
\dQuote{Monte Carlo theory, methods and examples,} \emph{ Art Owen,} 2009.}
}
