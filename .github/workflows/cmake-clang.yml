##############################################################################
# GitHub Actions Workflow for volesti to build tests with GCC
#
# Copyright (c) 2020-2022 Vissarion Fisikopoulos
#
# Licensed under GNU LGPL.3, see LICENCE file
##############################################################################
name: cmake-clang

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.config.os }} - ${{ matrix.config.compiler }}
    strategy:
          fail-fast: false
          matrix:
            config:
              - {os: ubuntu-22.04, compiler_pkg: clang-11, compiler: clang++-11}
              - {os: ubuntu-22.04, compiler_pkg: clang-12, compiler: clang++-12}
              - {os: ubuntu-22.04, compiler_pkg: clang-13, compiler: clang++-13}
              - {os: ubuntu-22.04, compiler_pkg: clang-14, compiler: clang++-14}
              #- {os: ubuntu-22.04, compiler_pkg: clang-15, compiler: clang++-15}
              - {os: ubuntu-20.04, compiler_pkg: clang-8, compiler: clang++-8}
              - {os: ubuntu-20.04, compiler_pkg: clang-9, compiler: clang++-9}
              - {os: ubuntu-20.04, compiler_pkg: clang-10, compiler: clang++-10}
              - {os: ubuntu-20.04, compiler_pkg: clang-11, compiler: clang++-11}
              - {os: ubuntu-20.04, compiler_pkg: clang-12, compiler: clang++-12}
    runs-on: ${{ matrix.config.os }}
    steps:
      - uses: actions/checkout@v1
      - run: sudo apt-get update || true;
             sudo apt-get install ${{ matrix.config.compiler_pkg }} lp-solve;
             rm -rf build;
             mkdir build;
             cd build;
             cmake -D CMAKE_CXX_COMPILER=${{ matrix.config.compiler }} -D CMAKE_CXX_FLAGS=-fsanitize=memory -D CMAKE_CXX_FLAGS=-fsanitize=undefined -D CMAKE_CXX_FLAGS=-g -D DISABLE_NLP_ORACLES=ON -D USE_MKL=OFF ../test;
             make;
             ctest --verbose;
